@page "/products"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject ApiServiceClient ApiServiceClient

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Product[] products;

    protected override async Task OnInitializedAsync()
    {
        products = await ApiServiceClient.GetProductsAsync();
    }
}
