<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>AspireDemo.ApiService.WeatherForecastEndpoint</Title>
			<Shortcut>aspiredemoapiserviceweatherforecastendpoint</Shortcut>
		</Header>
		<Snippet>
			<Code Language="CSharp">
				<![CDATA[
// Reference: .NET Aspire Dashboard & Telemetry
// https://www.youtube.com/watch?v=BB9q0FfVZl4&list=PLdo4fOcmZ0oWMbEO7CiaDZh6cqSTU_lzJ&index=10
// Create custom meter for metrics
var weatherForecastMeter = new Meter(AspireDemo.ServiceDefaults.OpenTelemetry.DefaultMeterName, "1.0.0");
var weatherForecastCounter = weatherForecastMeter.CreateCounter<int>("forecast.count");
// Create custom ActivitySource
var activitySource = new ActivitySource(AspireDemo.ServiceDefaults.OpenTelemetry.DefaultSourceName);

app.MapGet("/weatherforecast", (ILogger<Program> logger) =>
{
    // Create a custom activity for the work that we are doing formulating a weather forecast
    using var weatherSpan = activitySource.StartActivity("ForecastActivity");

    var forecast = new WeatherForecast[5];
    for (var i = 0; i < forecast.Length; i++)
    {
        // Increment custom counter
        weatherForecastCounter.Add(1);

        forecast[i] = new WeatherForecast
        (
            DateOnly.FromDateTime(DateTime.Now.AddDays(i)),
            Random.Shared.Next(-20, 55),
            summaries[Random.Shared.Next(summaries.Length)]
        );

        // Add tags to the Activity
        weatherSpan?.SetTag(forecast[i].Date.ToShortDateString(), forecast[i].Summary);
    }

    weatherSpan?.SetTag("env", Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT"));

    // Log a message
    logger.LogInformation("Sending weather forecast: {forecast}", forecast);

    return forecast;
});
				]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>